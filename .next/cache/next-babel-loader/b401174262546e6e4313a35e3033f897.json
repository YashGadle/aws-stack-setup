{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport nookies from 'nookies';\nlet contextObject = {};\nexport default class MyStorage {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // the promise returned from sync function\n  static setContext(ctx) {\n    contextObject = ctx;\n  } // set item with the key\n\n\n  static setItem(key, value) {\n    // console.log('Setting cookie.');\n    // Takes a ctx and sets cookie.\n    nookies.set(contextObject, key, value, {\n      maxAge: 30 * 24 * 60 * 60,\n      path: '/'\n    });\n    return key;\n  } // get item with the key\n\n\n  static getItem(key) {\n    const serverStatus = false;\n    const parsedCookies = nookies.get(contextObject); // if (serverStatus) {\n    //   console.log(`Attempting to readd: ${key} from server side:${parsedCookies[key]}`);\n    // } else {\n    //   console.log(`Attempting to readd: ${key} from client side:${parsedCookies[key]}`);\n    // }\n\n    return parsedCookies[key]; // return Object.prototype.hasOwnProperty.call(parsedCookies, key) ? parsedCookies[key] : undefined;\n  } // remove item with the key\n\n\n  static removeItem(key) {\n    nookies.destroy(contextObject, key);\n  } // clear out the storage\n\n\n  static clear() {\n    _Object$keys(contextObject).map(key => {\n      // console.log(`deleteing nookie ${key}`);\n      nookies.destroy(contextObject, key);\n    });\n  }\n\n}\n\n_defineProperty(MyStorage, \"syncPromise\", null);","map":{"version":3,"sources":["/Users/yashgadle/Yash/rrrr/components/MyStorage.ts"],"names":["nookies","contextObject","MyStorage","setContext","ctx","setItem","key","value","set","maxAge","path","getItem","serverStatus","parsedCookies","get","removeItem","destroy","clear","map"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,IAAIC,aAAa,GAAG,EAApB;AACA,eAAe,MAAMC,SAAN,CAAgB;AAC3B;AACA;AAEA,SAAOC,UAAP,CAAkBC,GAAlB,EAAkC;AAC9BH,IAAAA,aAAa,GAAGG,GAAhB;AACH,GAN0B,CAO3B;;;AACA,SAAOC,OAAP,CAAeC,GAAf,EAA4BC,KAA5B,EAAmD;AAC/C;AACA;AACAP,IAAAA,OAAO,CAACQ,GAAR,CAAYP,aAAZ,EAA2BK,GAA3B,EAAgCC,KAAhC,EAAuC;AACnCE,MAAAA,MAAM,EAAE,KAAK,EAAL,GAAU,EAAV,GAAe,EADY;AAEnCC,MAAAA,IAAI,EAAE;AAF6B,KAAvC;AAIA,WAAOJ,GAAP;AACH,GAhB0B,CAiB3B;;;AACA,SAAOK,OAAP,CAAeL,GAAf,EAAoC;AAChC,UAAMM,YAAqB,QAA3B;AACA,UAAMC,aAAa,GAAGb,OAAO,CAACc,GAAR,CAAYb,aAAZ,CAAtB,CAFgC,CAGhC;AACA;AACA;AACA;AACA;;AACA,WAAOY,aAAa,CAACP,GAAD,CAApB,CARgC,CAShC;AACH,GA5B0B,CA6B3B;;;AACA,SAAOS,UAAP,CAAkBT,GAAlB,EAAqC;AACjCN,IAAAA,OAAO,CAACgB,OAAR,CAAgBf,aAAhB,EAA+BK,GAA/B;AACH,GAhC0B,CAiC3B;;;AACA,SAAOW,KAAP,GAAqB;AACjB,iBAAYhB,aAAZ,EAA2BiB,GAA3B,CAAgCZ,GAAD,IAAS;AACpC;AACAN,MAAAA,OAAO,CAACgB,OAAR,CAAgBf,aAAhB,EAA+BK,GAA/B;AACH,KAHD;AAIH;;AAvC0B;;gBAAVJ,S,iBAGI,I","sourcesContent":["import nookies from 'nookies';\nlet contextObject = {};\nexport default class MyStorage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    // the promise returned from sync function\n    static syncPromise = null;\n    static setContext(ctx: any): void {\n        contextObject = ctx;\n    }\n    // set item with the key\n    static setItem(key: string, value: string): string {\n        // console.log('Setting cookie.');\n        // Takes a ctx and sets cookie.\n        nookies.set(contextObject, key, value, {\n            maxAge: 30 * 24 * 60 * 60,\n            path: '/',\n        });\n        return key;\n    }\n    // get item with the key\n    static getItem(key: string): string {\n        const serverStatus: boolean = typeof window === 'undefined';\n        const parsedCookies = nookies.get(contextObject)\n        // if (serverStatus) {\n        //   console.log(`Attempting to readd: ${key} from server side:${parsedCookies[key]}`);\n        // } else {\n        //   console.log(`Attempting to readd: ${key} from client side:${parsedCookies[key]}`);\n        // }\n        return parsedCookies[key];\n        // return Object.prototype.hasOwnProperty.call(parsedCookies, key) ? parsedCookies[key] : undefined;\n    }\n    // remove item with the key\n    static removeItem(key: string): void {\n        nookies.destroy(contextObject, key);\n    }\n    // clear out the storage\n    static clear(): void {\n        Object.keys(contextObject).map((key) => {\n            // console.log(`deleteing nookie ${key}`);\n            nookies.destroy(contextObject, key);\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}