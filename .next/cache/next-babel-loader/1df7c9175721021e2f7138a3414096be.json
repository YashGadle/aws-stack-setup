{"ast":null,"code":"import _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nvar _jsxFileName = \"/Users/yashgadle/Yash/rrrr/components/MyComponent.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst MyComponent = () => {\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(gql(\"query Blogs {\\n    listBlogs {\\n      items{\\n        id\\n        name\\n      }\\n    }\\n  }\\n  \"));\n  if (loading) return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Error...\");\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, _JSON$stringify(data)));\n};\n\nexport default MyComponent;","map":{"version":3,"sources":["/Users/yashgadle/Yash/rrrr/components/MyComponent.tsx"],"names":["React","useQuery","gql","MyComponent","data","loading","error"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AACxB,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BL,QAAQ,CACvCC,GAAG,mGADoC,CAAzC;AAYA,MAAIG,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AAEb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,gBAAeF,IAAf,CAAP,CADF,CADF;AAKD,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["import React from \"react\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\n\nconst MyComponent = () => {\n  const { data, loading, error } = useQuery(\n    gql(`query Blogs {\n    listBlogs {\n      items{\n        id\n        name\n      }\n    }\n  }\n  `)\n  );\n\n  if (loading) return <span>Loading...</span>;\n\n  if (error) return <span>Error...</span>;\n\n  return (\n    <div>\n      <span>{JSON.stringify(data)}</span>\n    </div>\n  );\n};\n\nexport default MyComponent;\n"]},"metadata":{},"sourceType":"module"}