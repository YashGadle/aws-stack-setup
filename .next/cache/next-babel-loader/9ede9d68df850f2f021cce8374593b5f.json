{"ast":null,"code":"var _jsxFileName = \"/Users/yashgadle/Yash/rrrr/pages/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport \"./App.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AWSAppSyncClient from \"aws-appsync\";\nimport { Auth } from \"aws-amplify\";\nimport config from \"./aws-exports\";\nimport MyComponent from \"../components/MyComponent\";\nconst client = new AWSAppSyncClient({\n  url: config.aws_appsync_graphqlEndpoint,\n  region: config.aws_appsync_region,\n  disableOffline: true,\n  auth: {\n    //@ts-ignore\n    type: config.aws_appsync_authenticationType,\n    credentials: () => Auth.currentCredentials(),\n    jwtToken: async () => (await Auth.currentSession()).getAccessToken().getJwtToken()\n  },\n  complexObjectsCredentials: () => Auth.currentCredentials()\n});\n\nconst App = () => {\n  const checkUser = function () {\n    Auth.currentAuthenticatedUser().then(user => console.log({\n      user\n    })).catch(err => console.log(err));\n  };\n\n  const signOut = function () {\n    Auth.signOut().then(data => console.log(data)).catch(err => console.log(err));\n  };\n\n  return __jsx(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Edit \", __jsx(\"code\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"src/App.js\"), \" and save to reload.\"), __jsx(MyComponent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), __jsx(\"button\", {\n    onClick: () => {\n      //@ts-ignore\n      Auth.federatedSignIn({\n        provider: \"Google\"\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Sign In\"), __jsx(\"button\", {\n    onClick: checkUser,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Check User\"), __jsx(\"button\", {\n    onClick: signOut,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Sign Out\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/yashgadle/Yash/rrrr/pages/index.tsx"],"names":["React","ApolloProvider","AWSAppSyncClient","Auth","config","MyComponent","client","url","aws_appsync_graphqlEndpoint","region","aws_appsync_region","disableOffline","auth","type","aws_appsync_authenticationType","credentials","currentCredentials","jwtToken","currentSession","getAccessToken","getJwtToken","complexObjectsCredentials","App","checkUser","currentAuthenticatedUser","then","user","console","log","catch","err","signOut","data","federatedSignIn","provider"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,OAAOC,gBAAP,MAA6B,aAA7B;AACA,SAASC,IAAT,QAAqB,aAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,MAAMC,MAAM,GAAG,IAAIJ,gBAAJ,CAAqB;AAClCK,EAAAA,GAAG,EAAEH,MAAM,CAACI,2BADsB;AAElCC,EAAAA,MAAM,EAAEL,MAAM,CAACM,kBAFmB;AAGlCC,EAAAA,cAAc,EAAE,IAHkB;AAIlCC,EAAAA,IAAI,EAAE;AACJ;AACAC,IAAAA,IAAI,EAAET,MAAM,CAACU,8BAFT;AAGJC,IAAAA,WAAW,EAAE,MAAMZ,IAAI,CAACa,kBAAL,EAHf;AAIJC,IAAAA,QAAQ,EAAE,YACR,CAAC,MAAMd,IAAI,CAACe,cAAL,EAAP,EAA8BC,cAA9B,GAA+CC,WAA/C;AALE,GAJ4B;AAWlCC,EAAAA,yBAAyB,EAAE,MAAMlB,IAAI,CAACa,kBAAL;AAXC,CAArB,CAAf;;AAcA,MAAMM,GAAa,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAAG,YAAW;AAC3BpB,IAAAA,IAAI,CAACqB,wBAAL,GACGC,IADH,CACQC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY;AAAEF,MAAAA;AAAF,KAAZ,CADhB,EAEGG,KAFH,CAESC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFhB;AAGD,GAJD;;AAMA,QAAMC,OAAO,GAAG,YAAW;AACzB5B,IAAAA,IAAI,CAAC4B,OAAL,GACGN,IADH,CACQO,IAAI,IAAIL,OAAO,CAACC,GAAR,CAAYI,IAAZ,CADhB,EAEGH,KAFH,CAESC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFhB;AAGD,GAJD;;AAKA,SACE,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAExB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cACO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADP,yBADF,EAIE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE;AACE,IAAA,OAAO,EAAE,MAAM;AACb;AACAH,MAAAA,IAAI,CAAC8B,eAAL,CAAqB;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAArB;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALF,EAaE;AAAQ,IAAA,OAAO,EAAEX,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,EAcE;AAAQ,IAAA,OAAO,EAAEQ,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,CADF,CADF,CADF;AAsBD,CAlCD;;AAoCA,eAAeT,GAAf","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport AWSAppSyncClient from \"aws-appsync\";\nimport { Auth } from \"aws-amplify\";\nimport config from \"./aws-exports\";\nimport MyComponent from \"../components/MyComponent\";\n\nconst client = new AWSAppSyncClient({\n  url: config.aws_appsync_graphqlEndpoint,\n  region: config.aws_appsync_region,\n  disableOffline: true,\n  auth: {\n    //@ts-ignore\n    type: config.aws_appsync_authenticationType,\n    credentials: () => Auth.currentCredentials(),\n    jwtToken: async () =>\n      (await Auth.currentSession()).getAccessToken().getJwtToken()\n  },\n  complexObjectsCredentials: () => Auth.currentCredentials()\n});\n\nconst App: React.FC = () => {\n  const checkUser = function() {\n    Auth.currentAuthenticatedUser()\n      .then(user => console.log({ user }))\n      .catch(err => console.log(err));\n  };\n\n  const signOut = function() {\n    Auth.signOut()\n      .then(data => console.log(data))\n      .catch(err => console.log(err));\n  };\n  return (\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <MyComponent />\n          <button\n            onClick={() => {\n              //@ts-ignore\n              Auth.federatedSignIn({ provider: \"Google\" });\n            }}\n          >\n            Sign In\n          </button>\n          <button onClick={checkUser}>Check User</button>\n          <button onClick={signOut}>Sign Out</button>\n        </header>\n      </div>\n    </ApolloProvider>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}