{"version":3,"file":"static/webpack/static/development/pages/index.js.11ec47bac39e94359bb7.hot-update.js","sources":["webpack:///./pages/index.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { Auth } from \"aws-amplify\";\nimport MyComponent from \"../components/MyComponent\";\nimport withData from \"../hoc/withData\";\nimport cookies from \"next-cookies\";\nimport { NextPage } from \"next\";\n\nexport const AuthContext = React.createContext({\n  token: \"\",\n  userDetails: {} as any\n});\n\ninterface Props {\n  token: string;\n  userDetails: any;\n}\n\nconst App: NextPage<Props> = props => {\n  const { token, userDetails } = props;\n\n  useEffect(() => {\n    Auth.currentAuthenticatedUser()\n      .then(user => console.log({ user }))\n      .catch(err => console.log(err));\n  });\n\n  const checkUser = function() {\n    Auth.currentAuthenticatedUser()\n      .then(user => console.log({ user }))\n      .catch(err => console.log(err));\n  };\n\n  const signOut = function() {\n    Auth.signOut()\n      .then(data => console.log(data))\n      .catch(err => console.log(err));\n  };\n  return (\n    <AuthContext.Provider\n      value={{\n        token,\n        userDetails\n      }}\n    >\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <MyComponent />\n          <button\n            onClick={() => {\n              //@ts-ignore\n              Auth.federatedSignIn({ provider: \"Google\" });\n            }}\n          >\n            Sign In\n          </button>\n          <button onClick={checkUser}>Check User</button>\n          <button onClick={signOut}>Sign Out</button>\n        </header>\n      </div>\n    </AuthContext.Provider>\n  );\n};\n\nApp.getInitialProps = async function(ctx) {\n  //TODO: Token check for private routes\n  //Cookie access token or not\n  // if(ctx does not include accessToken then private route){}\n\n  const _cookies = cookies(ctx);\n  let accessToken = \"\";\n  let userDetails = {} as any;\n\n  Object.entries(_cookies).forEach(([key, value]) => {\n    if (key.includes(\"accessToken\")) accessToken = value;\n    if (key.includes(\"user\")) userDetails = value;\n  });\n\n  console.log(_cookies);\n\n  return {\n    token: accessToken,\n    userDetails: userDetails\n  };\n};\n\nexport default withData(App);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAFA;AACA;AASA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAEA;AACA;AACA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;;;;A","sourceRoot":""}